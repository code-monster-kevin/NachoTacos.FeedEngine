// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NachoTacos.FeedEngine.Data;

namespace NachoTacos.FeedEngine.Data.Migrations
{
    [DbContext(typeof(FeedEngineContext))]
    [Migration("20191227032336_data-model-001")]
    partial class datamodel001
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NachoTacos.FeedEngine.Domain.FeedSource", b =>
                {
                    b.Property<string>("FeedUrl")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeedTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("FeedUrl");

                    b.HasIndex("FeedTypeCode");

                    b.ToTable("FeedSources");
                });

            modelBuilder.Entity("NachoTacos.FeedEngine.Domain.FeedType", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("FeedTypes");

                    b.HasData(
                        new
                        {
                            Code = "RSS091",
                            Description = "RSS 0.91"
                        },
                        new
                        {
                            Code = "RSS092",
                            Description = "RSS 0.92"
                        },
                        new
                        {
                            Code = "RSS100",
                            Description = "RSS 1.0"
                        },
                        new
                        {
                            Code = "RSS200",
                            Description = "RSS 2.0"
                        },
                        new
                        {
                            Code = "ATOM",
                            Description = "ATOM"
                        });
                });

            modelBuilder.Entity("NachoTacos.FeedEngine.Domain.FeedSource", b =>
                {
                    b.HasOne("NachoTacos.FeedEngine.Domain.FeedType", "FeedType")
                        .WithMany()
                        .HasForeignKey("FeedTypeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
